{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "msg",
          "type": "string"
        }
      ],
      "name": "WARNING_Deprecated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "a",
      "outputs": [
        {
          "internalType": "contract Accounts",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "min",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "max",
          "type": "uint256"
        }
      ],
      "name": "bound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "adjust",
          "type": "bool"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "rewind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAddIsRemoveAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAddIsRemoveAmbulance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAddIsRemoveHospital",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAddIsRemoveInitiator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "tip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "162:3555:6:-:0;;;1609:26:0;;;-1:-1:-1;;1609:26:0;1631:4;1609:26;;;162:3555:6;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "162:3555:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;442:405;;;:::i;:::-;;199:17;;;;;-1:-1:-1;;;;;199:17:6;;;;;;-1:-1:-1;;;;;196:32:7;;;178:51;;166:2;151:18;199:17:6;;;;;;;;1769:119:1;;;;;;:::i;:::-;;:::i;1550:671:6:-;;;:::i;1090:99:1:-;;;;;;:::i;:::-;;:::i;1314:123::-;;;;;;:::i;:::-;;:::i;4887:469::-;;;;;;:::i;:::-;;:::i;937:87::-;;;;;;:::i;:::-;;:::i;475:40::-;;-1:-1:-1;;;;;;;;;;;475:40:1;;2152:143;;;;;;:::i;:::-;;:::i;4133:589::-;;;;;;:::i;:::-;;:::i;:::-;;;4731:25:7;;;4719:2;4704:18;4133:589:1;4585:177:7;2303:671:6;;;:::i;3067:109:1:-;;;;;;:::i;:::-;;:::i;1652:::-;;;;;;:::i;:::-;;:::i;3184:941::-;;;;;;:::i;:::-;;:::i;5364:420::-;;;;;;:::i;:::-;;:::i;3055:659:6:-;;;:::i;1445:133:1:-;;;;;;:::i;:::-;;:::i;844:85::-;;;;;;:::i;:::-;;:::i;1865:600:0:-;;;:::i;:::-;;;5979:14:7;;5972:22;5954:41;;5942:2;5927:18;1865:600:0;5814:187:7;2856:83:1;;;;;;:::i;:::-;;:::i;2011:133::-;;;;;;:::i;:::-;;:::i;2455:304::-;;;;;;:::i;:::-;;:::i;925:543:6:-;;;:::i;1197:109:1:-;;;;;;:::i;:::-;;:::i;1609:26:0:-;;;;;;;;;442:405:6;595:10;;-1:-1:-1;;;;;;595:10:6;;603:1;595:10;;;4731:25:7;-1:-1:-1;;;;;;;;;;;1712:64:0;595:7:6;;4704:18:7;;595:10:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;582;:23;;-1:-1:-1;;;;;;582:23:6;-1:-1:-1;;;;;582:23:6;;;;;;;;;616:20;;-1:-1:-1;;;616:20:6;;;;;178:51:7;;;;-1:-1:-1;;;;;;;;;;;1712:64:0;616:8:6;;151:18:7;;616:20:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;651:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;647:1:6;:18;;-1:-1:-1;;;;;;647:18:6;-1:-1:-1;;;;;647:18:6;;;;;;;;;;731:10;;-1:-1:-1;;;;;;731:10:6;;-1:-1:-1;731:10:6;;;4731:25:7;-1:-1:-1;;;;;;;;;;;1712:64:0;731:7:6;;4704:18:7;;731:10:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;723:5;:18;;-1:-1:-1;;;;;;723:18:6;-1:-1:-1;;;;;723:18:6;;;;;;;;;;764:10;;-1:-1:-1;;;;;;764:10:6;;772:1;764:10;;;4731:25:7;-1:-1:-1;;;;;;;;;;;1712:64:0;764:7:6;;4704:18:7;;764:10:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;752:9;:22;;-1:-1:-1;;;;;;752:22:6;-1:-1:-1;;;;;752:22:6;;;;;;;;;;797:10;;-1:-1:-1;;;;;;797:10:6;;805:1;797:10;;;4731:25:7;-1:-1:-1;;;;;;;;;;;1712:64:0;797:7:6;;4704:18:7;;797:10:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;785:9;:22;;-1:-1:-1;;;;;;785:22:6;-1:-1:-1;;;;;785:22:6;;;;;;;;;;829:10;;-1:-1:-1;;;;;;829:10:6;;837:1;829:10;;;4731:25:7;-1:-1:-1;;;;;;;;;;;1712:64:0;829:7:6;;4704:18:7;;829:10:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;818:8;:21;;-1:-1:-1;;;;;;818:21:6;-1:-1:-1;;;;;818:21:6;;;;;;;;;;442:405::o;1769:119:1:-;1833:18;;-1:-1:-1;;;1833:18:1;;-1:-1:-1;;;;;;;;;;;1712:64:0;1833:7:1;;:18;;1841:3;;1846:4;;1833:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1862:18:1;;-1:-1:-1;;;1862:18:1;;-1:-1:-1;;;;;196:32:7;;1862:18:1;;;178:51:7;-1:-1:-1;;;;;;;;;;;1712:64:0;-1:-1:-1;1862:13:1;;-1:-1:-1;151:18:7;;1862::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1769:119;;:::o;1550:671:6:-;1639:10;;1630:20;;-1:-1:-1;;;1630:20:6;;-1:-1:-1;;;;;1639:10:6;;;1630:20;;;178:51:7;-1:-1:-1;;;;;;;;;;;1712:64:0;1630:8:6;;151:18:7;;1630:20:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1661:1:6;;1672:5;;1661:17;;-1:-1:-1;;;1661:17:6;;-1:-1:-1;;;;;1672:5:6;;;1661:17;;;178:51:7;1661:1:6;;;-1:-1:-1;1661:10:6;;-1:-1:-1;151:18:7;;1661:17:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1747:10:6;;1733:25;;-1:-1:-1;;;1733:25:6;;-1:-1:-1;;;;;1747:10:6;;;1733:25;;;178:51:7;-1:-1:-1;;;;;;;;;;;1712:64:0;-1:-1:-1;1733:13:6;;-1:-1:-1;151:18:7;;1733:25:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1812:1:6;;1826:9;;1812:24;;-1:-1:-1;;;1812:24:6;;-1:-1:-1;;;;;1826:9:6;;;1812:24;;;178:51:7;1812:1:6;;;-1:-1:-1;1812:13:6;;-1:-1:-1;151:18:7;;1812:24:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1806:3;:30;;-1:-1:-1;;;;1806:30:6;-1:-1:-1;;;1806:30:6;;;;;;;;;;1851:20;;1806:30;1860:3;;;-1:-1:-1;1851:8:6;:20::i;:::-;1922:1;;1937:9;;1922:25;;-1:-1:-1;;;1922:25:6;;-1:-1:-1;;;;;1937:9:6;;;1922:25;;;178:51:7;1922:1:6;;;:14;;151:18:7;;1922:25:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1968:1:6;;1982:9;;1968:24;;-1:-1:-1;;;1968:24:6;;-1:-1:-1;;;;;1982:9:6;;;1968:24;;;178:51:7;1968:1:6;;;-1:-1:-1;1968:13:6;;-1:-1:-1;151:18:7;;1968:24:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1962:3;:30;;-1:-1:-1;;;;1962:30:6;-1:-1:-1;;;1962:30:6;;;;;;;;;;2007:19;;1962:30;2016:3;;;-1:-1:-1;2007:8:6;:19::i;:::-;2080:1;;2098:9;;2080:28;;-1:-1:-1;;;2080:28:6;;-1:-1:-1;;;;;2098:9:6;;;2080:28;;;178:51:7;2080:1:6;;;:17;;151:18:7;;2080:28:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2129:1:6;;2143:9;;2129:24;;-1:-1:-1;;;2129:24:6;;-1:-1:-1;;;;;2143:9:6;;;2129:24;;;178:51:7;2129:1:6;;;-1:-1:-1;2129:13:6;;-1:-1:-1;151:18:7;;2129:24:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2123:3;:30;;-1:-1:-1;;;;2123:30:6;-1:-1:-1;;;2123:30:6;;;;;;;;;;2168:20;;2123:30;2177:3;;;-1:-1:-1;2168:8:6;:20::i;:::-;2199:14;;;-1:-1:-1;;;2199:14:6;;;;-1:-1:-1;;;;;;;;;;;1712:64:0;2199:12:6;;:14;;;;;1736:37:0;;2199:14:6;;;;;;;1736:37:0;1712:64;2199:14:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1550:671::o;1090:99:1:-;1135:22;;-1:-1:-1;;;1135:22:1;;-1:-1:-1;;;;;;;;;;;1712:64:0;1135:7:1;;:22;;1143:3;;-1:-1:-1;;;1148:8:1;1135:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1168:13:1;;-1:-1:-1;;;1168:13:1;;-1:-1:-1;;;;;196:32:7;;1168:13:1;;;178:51:7;-1:-1:-1;;;;;;;;;;;1712:64:0;-1:-1:-1;1168:8:1;;-1:-1:-1;151:18:7;;1168:13:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1090:99;:::o;1314:123::-;1375:22;;-1:-1:-1;;;1375:22:1;;-1:-1:-1;;;;;;;;;;;1712:64:0;1375:7:1;;:22;;1383:3;;-1:-1:-1;;;1388:8:1;1375:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1408:21:1;;-1:-1:-1;;;1408:21:1;;-1:-1:-1;;;;;8106:15:7;;;1408:21:1;;;8088:34:7;8158:15;;8138:18;;;8131:43;-1:-1:-1;;;;;;;;;;;1712:64:0;-1:-1:-1;1408:8:1;;-1:-1:-1;8023:18:7;;1408:21:1;7876:304:7;4887:469:1;5051:16;;-1:-1:-1;;;5051:16:1;;4980:12;;;;-1:-1:-1;;;;;;;;;;;1712:64:0;5051:10:1;;:16;;5062:4;;5051:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5051:16:1;;;;;;;;;;;;:::i;:::-;5069:4;5034:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5010:64;;5198:8;5192:15;5185:4;5175:8;5171:19;5168:1;5161:47;5153:55;-1:-1:-1;;;;;;5253:18:1;;5231:117;;;;-1:-1:-1;;;5231:117:1;;10249:2:7;5231:117:1;;;10231:21:7;10288:2;10268:18;;;10261:30;10327:34;10307:18;;;10300:62;-1:-1:-1;;;10378:18:7;;;10371:47;10435:19;;5231:117:1;;;;;;;;;4999:357;4887:469;;;;:::o;937:87::-;-1:-1:-1;;;;;;;;;;;985:7:1;993:22;1011:4;993:15;:22;:::i;:::-;985:31;;;;;;;;;;;;;4731:25:7;;4719:2;4704:18;;4585:177;2152:143:1;2232:18;;-1:-1:-1;;;2232:18:1;;-1:-1:-1;;;;;;;;;;;1712:64:0;2232:7:1;;:18;;2240:3;;2245:4;;2232:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2261:26:1;;-1:-1:-1;;;2261:26:1;;-1:-1:-1;;;;;8106:15:7;;;2261:26:1;;;8088:34:7;8158:15;;8138:18;;;8131:43;-1:-1:-1;;;;;;;;;;;1712:64:0;-1:-1:-1;2261:13:1;;-1:-1:-1;8023:18:7;;2261:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2152:143;;;:::o;4133:589::-;4201:14;4243:3;4236;:10;;4228:81;;;;-1:-1:-1;;;4228:81:1;;10929:2:7;4228:81:1;;;10911:21:7;10968:2;10948:18;;;10941:30;11007:34;10987:18;;;10980:62;11078:28;11058:18;;;11051:56;11124:19;;4228:81:1;10727:422:7;4228:81:1;4322:12;4337:9;4343:3;4337;:9;:::i;:::-;4322:24;;4363:4;4371:1;4363:9;4359:300;;4407:3;4398:12;;4359:300;;;-1:-1:-1;;4441:4:1;:19;4437:222;;4495:1;4486:10;;4437:222;;;4547:6;;;:::i;:::-;;-1:-1:-1;4592:11:1;4606:8;4547:6;4606:1;:8;:::i;:::-;4592:22;-1:-1:-1;4638:9:1;4592:22;4638:3;:9;:::i;:::-;4629:18;;4532:127;4437:222;4676:38;;;11853:21:7;;;11910:2;11890:18;;;11883:30;-1:-1:-1;;;11944:2:7;11929:18;;11922:42;12031:4;12016:20;;12009:36;;;4676:38:1;;;;;;;11996:3:7;4676:38:1;;;4217:505;4133:589;;;;;:::o;2303:671:6:-;2392:10;;2383:20;;-1:-1:-1;;;2383:20:6;;-1:-1:-1;;;;;2392:10:6;;;2383:20;;;178:51:7;-1:-1:-1;;;;;;;;;;;1712:64:0;2383:8:6;;151:18:7;;2383:20:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2414:1:6;;2425:5;;2414:17;;-1:-1:-1;;;2414:17:6;;-1:-1:-1;;;;;2425:5:6;;;2414:17;;;178:51:7;2414:1:6;;;-1:-1:-1;2414:10:6;;-1:-1:-1;151:18:7;;2414:17:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2500:10:6;;2486:25;;-1:-1:-1;;;2486:25:6;;-1:-1:-1;;;;;2500:10:6;;;2486:25;;;178:51:7;-1:-1:-1;;;;;;;;;;;1712:64:0;-1:-1:-1;2486:13:6;;-1:-1:-1;151:18:7;;2486:25:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2565:1:6;;2579:9;;2565:24;;-1:-1:-1;;;2565:24:6;;-1:-1:-1;;;;;2579:9:6;;;2565:24;;;178:51:7;2565:1:6;;;-1:-1:-1;2565:13:6;;-1:-1:-1;151:18:7;;2565:24:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2559:3;:30;;-1:-1:-1;;;;2559:30:6;-1:-1:-1;;;2559:30:6;;;;;;;;;;2604:20;;2559:30;2613:3;;;-1:-1:-1;2604:8:6;:20::i;:::-;2675:1;;2690:9;;2675:25;;-1:-1:-1;;;2675:25:6;;-1:-1:-1;;;;;2690:9:6;;;2675:25;;;178:51:7;2675:1:6;;;:14;;151:18:7;;2675:25:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2721:1:6;;2735:9;;2721:24;;-1:-1:-1;;;2721:24:6;;-1:-1:-1;;;;;2735:9:6;;;2721:24;;;178:51:7;2721:1:6;;;-1:-1:-1;2721:13:6;;-1:-1:-1;151:18:7;;2721:24:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2715:3;:30;;-1:-1:-1;;;;2715:30:6;-1:-1:-1;;;2715:30:6;;;;;;;;;;2760:19;;2715:30;2769:3;;;-1:-1:-1;2760:8:6;:19::i;:::-;2833:1;;2851:9;;2833:28;;-1:-1:-1;;;2833:28:6;;-1:-1:-1;;;;;2851:9:6;;;2833:28;;;178:51:7;2833:1:6;;;:17;;151:18:7;;2833:28:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2882:1:6;;2896:9;;2882:24;;-1:-1:-1;;;2882:24:6;;-1:-1:-1;;;;;2896:9:6;;;2882:24;;;178:51:7;2882:1:6;;;-1:-1:-1;2882:13:6;;-1:-1:-1;151:18:7;;2882:24:6;14:221:7;3067:109:1;3140:28;3145:5;3152:2;3156:4;3162:5;3140:4;:28::i;:::-;3067:109;;;:::o;1652:::-;1702:22;;-1:-1:-1;;;1702:22:1;;-1:-1:-1;;;;;;;;;;;1712:64:0;1702:7:1;;:22;;1710:3;;-1:-1:-1;;;1715:8:1;1702:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1735:18:1;;-1:-1:-1;;;1735:18:1;;-1:-1:-1;;;;;196:32:7;;1735:18:1;;;178:51:7;-1:-1:-1;;;;;;;;;;;1712:64:0;-1:-1:-1;1735:13:1;;-1:-1:-1;151:18:7;;1735::1;14:221:7;3184:941:1;3340:38;;;-1:-1:-1;;;;;196:32:7;;;3340:38:1;;;;178:51:7;;;;3340:38:1;;;;;;;;;;151:18:7;;;;3340:38:1;;;;;;;-1:-1:-1;;;;;3340:38:1;-1:-1:-1;;;3340:38:1;;;3329:50;;3305:20;;3329:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3302:77;;;3390:15;3419:7;3408:30;;;;;;;;;;;;:::i;:::-;3390:48;-1:-1:-1;3478:127:1;3600:4;3478:93;3568:2;3478:66;-1:-1:-1;;;3478:36:1;:8;3508:5;3478:29;:36::i;:::-;:54;18241:9;;;:16;;-1:-1:-1;;18241:16:1;;;;;;;;;;;;:9;18141:146;3478:66;:89;18567:10;;;:47;;;;;;;-1:-1:-1;18567:47:1;;;;;;;-1:-1:-1;;;;;18591:21:1;;;;18567:47;;;:10;18462:182;3478:93;:121;;:127::i;:::-;3653:6;3650:468;;;3716:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3716:34:1;-1:-1:-1;;;3716:34:1;;;3705:46;;3678:23;;-1:-1:-1;;;;;3705:10:1;;;:46;;3716:34;3705:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3675:76;;;3766:14;3794:10;3783:33;;;;;;;;;;;;:::i;:::-;3766:50;;3841:7;3834:4;:14;3831:147;;;3880:14;3890:4;3880:7;:14;:::i;:::-;3869:26;;;;:::i;:::-;;;3831:147;;;3947:14;3954:7;3947:4;:14;:::i;:::-;3936:26;;;;:::i;:::-;;;3831:147;3992:114;4099:6;3992:74;-1:-1:-1;;;3992:40:1;:8;4026:5;3992:33;:40::i;:114::-;3660:458;;3259:866;;3184:941;;;;:::o;5364:420::-;5492:16;;-1:-1:-1;;;5492:16:1;;5438:12;;;;-1:-1:-1;;;;;;;;;;;1712:64:0;5492:10:1;;:16;;5503:4;;5492:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5492:16:1;;;;;;;;;;;;:::i;:::-;5468:40;;5632:8;5626:15;5619:4;5609:8;5605:19;5602:1;5595:47;5587:55;-1:-1:-1;;;;;;5687:18:1;;5665:111;;;;-1:-1:-1;;;5665:111:1;;12726:2:7;5665:111:1;;;12708:21:7;12765:2;12745:18;;;12738:30;12804:34;12784:18;;;12777:62;-1:-1:-1;;;12855:18:7;;;12848:41;12906:19;;5665:111:1;12524:407:7;5665:111:1;5457:327;5364:420;;;:::o;3055:659:6:-;3143:10;;3134:20;;-1:-1:-1;;;3134:20:6;;-1:-1:-1;;;;;3143:10:6;;;3134:20;;;178:51:7;-1:-1:-1;;;;;;;;;;;1712:64:0;3134:8:6;;151:18:7;;3134:20:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3165:1:6;;3176:5;;3165:17;;-1:-1:-1;;;3165:17:6;;-1:-1:-1;;;;;3176:5:6;;;3165:17;;;178:51:7;3165:1:6;;;-1:-1:-1;3165:10:6;;-1:-1:-1;151:18:7;;3165:17:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3250:10:6;;3236:25;;-1:-1:-1;;;3236:25:6;;-1:-1:-1;;;;;3250:10:6;;;3236:25;;;178:51:7;-1:-1:-1;;;;;;;;;;;1712:64:0;-1:-1:-1;3236:13:6;;-1:-1:-1;151:18:7;;3236:25:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3315:1:6;;3328:8;;3315:22;;-1:-1:-1;;;3315:22:6;;-1:-1:-1;;;;;3328:8:6;;;3315:22;;;178:51:7;3315:1:6;;;-1:-1:-1;3315:12:6;;-1:-1:-1;151:18:7;;3315:22:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3309:3;:28;;-1:-1:-1;;;;3309:28:6;-1:-1:-1;;;3309:28:6;;;;;;;;;;3352:20;;3309:28;3361:3;;;-1:-1:-1;3352:8:6;:20::i;:::-;3423:1;;3437:8;;3423:23;;-1:-1:-1;;;3423:23:6;;-1:-1:-1;;;;;3437:8:6;;;3423:23;;;178:51:7;3423:1:6;;;:13;;151:18:7;;3423:23:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3467:1:6;;3480:8;;3467:22;;-1:-1:-1;;;3467:22:6;;-1:-1:-1;;;;;3480:8:6;;;3467:22;;;178:51:7;3467:1:6;;;-1:-1:-1;3467:12:6;;-1:-1:-1;151:18:7;;3467:22:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3461:3;:28;;-1:-1:-1;;;;3461:28:6;-1:-1:-1;;;3461:28:6;;;;;;;;;;3504:19;;3461:28;3513:3;;;-1:-1:-1;3504:8:6;:19::i;:::-;3577:1;;3594:8;;3577:26;;-1:-1:-1;;;3577:26:6;;-1:-1:-1;;;;;3594:8:6;;;3577:26;;;178:51:7;3577:1:6;;;:16;;151:18:7;;3577:26:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3624:1:6;;3637:8;;3624:22;;-1:-1:-1;;;3624:22:6;;-1:-1:-1;;;;;3637:8:6;;;3624:22;;;178:51:7;3624:1:6;;;-1:-1:-1;3624:12:6;;-1:-1:-1;151:18:7;;3624:22:6;14:221:7;1445:133:1;1520:18;;-1:-1:-1;;;1520:18:1;;-1:-1:-1;;;;;;;;;;;1712:64:0;1520:7:1;;:18;;1528:3;;1533:4;;1520:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1549:21:1;;-1:-1:-1;;;1549:21:1;;-1:-1:-1;;;;;8106:15:7;;;1549:21:1;;;8088:34:7;8158:15;;8138:18;;;8131:43;-1:-1:-1;;;;;;;;;;;1712:64:0;-1:-1:-1;1549:8:1;;-1:-1:-1;8023:18:7;;1549:21:1;7876:304:7;844:85:1;-1:-1:-1;;;;;;;;;;;890:7:1;898:22;916:4;898:15;:22;:::i;1865:600:0:-;1899:4;1920:7;;;;;;;1916:542;;;-1:-1:-1;1951:7:0;;;;;;;;1865:600::o;1916:542::-;1991:17;-1:-1:-1;;;;;;;;;;;3058:55:0;3141:16;2031:382;;2251:43;;2075:20;;-1:-1:-1;;;;;;;;;;;1712:64:0;2189:34;;2251:43;;1712:64;;-1:-1:-1;;;2276:17:0;2251:43;;;:::i;:::-;;;;-1:-1:-1;;2251:43:0;;;;;;;;;;2139:178;;;2251:43;2139:178;;:::i;:::-;;;;-1:-1:-1;;2139:178:0;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:0:o;2856:83:1:-;2914:17;;-1:-1:-1;;;2914:17:1;;-1:-1:-1;;;;;;;;;;;1712:64:0;2914:7:1;;:17;;2922:2;;2926:4;;2914:17;;;:::i;2011:133::-;2077:22;;-1:-1:-1;;;2077:22:1;;-1:-1:-1;;;;;;;;;;;1712:64:0;2077:7:1;;:22;;2085:3;;-1:-1:-1;;;2090:8:1;2077:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2110:26:1;;-1:-1:-1;;;2110:26:1;;-1:-1:-1;;;;;8106:15:7;;;2110:26:1;;;8088:34:7;8158:15;;8138:18;;;8131:43;-1:-1:-1;;;;;;;;;;;1712:64:0;-1:-1:-1;2110:13:1;;-1:-1:-1;8023:18:7;;2110:26:1;7876:304:7;2455::1;2532:81;;;;;13793:2:7;13775:21;;;13832:2;13812:18;;;13805:30;13871:34;13866:2;13851:18;;13844:62;13942:29;13937:2;13922:18;;13915:57;14004:3;13989:19;;13591:423;2532:81:1;;;;;;;;2624:127;2746:4;2624:93;2714:2;2624:66;-1:-1:-1;;;2624:36:1;:8;2654:5;2624:29;:36::i;925:543:6:-;1027:10;;1013:25;;-1:-1:-1;;;1013:25:6;;-1:-1:-1;;;;;1027:10:6;;;1013:25;;;178:51:7;-1:-1:-1;;;;;;;;;;;1712:64:0;1013:13:6;;151:18:7;;1013:25:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1096:1:6;;1106:5;;1096:16;;-1:-1:-1;;;1096:16:6;;-1:-1:-1;;;;;1106:5:6;;;1096:16;;;178:51:7;1096:1:6;;;-1:-1:-1;1096:9:6;;-1:-1:-1;151:18:7;;1096:16:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1090:3;:22;;-1:-1:-1;;;;1090:22:6;-1:-1:-1;;;1090:22:6;;;;;;;;;;1127:20;;1090:22;1136:3;;;-1:-1:-1;1127:8:6;:20::i;:::-;1200:1;;1211:5;;1200:17;;-1:-1:-1;;;1200:17:6;;-1:-1:-1;;;;;1211:5:6;;;1200:17;;;178:51:7;1200:1:6;;;:10;;151:18:7;;1200:17:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1238:1:6;;1248:5;;1238:16;;-1:-1:-1;;;1238:16:6;;-1:-1:-1;;;;;1248:5:6;;;1238:16;;;178:51:7;1238:1:6;;;-1:-1:-1;1238:9:6;;-1:-1:-1;151:18:7;;1238:16:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1232:3;:22;;-1:-1:-1;;;;1232:22:6;-1:-1:-1;;;1232:22:6;;;;;;;;;;1269:19;;1232:22;1278:3;;;-1:-1:-1;1269:8:6;:19::i;:::-;1343:1;;1357:5;;1343:20;;-1:-1:-1;;;1343:20:6;;-1:-1:-1;;;;;1357:5:6;;;1343:20;;;178:51:7;1343:1:6;;;:13;;151:18:7;;1343:20:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1384:1:6;;1394:5;;1384:16;;-1:-1:-1;;;1384:16:6;;-1:-1:-1;;;;;1394:5:6;;;1384:16;;;178:51:7;1384:1:6;;;-1:-1:-1;1384:9:6;;-1:-1:-1;151:18:7;;1384:16:6;14:221:7;1197:109:1;1256:18;;-1:-1:-1;;;1256:18:1;;-1:-1:-1;;;;;;;;;;;1712:64:0;1256:7:1;;:18;;1264:3;;1269:4;;1256:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1285:13:1;;-1:-1:-1;;;1285:13:1;;-1:-1:-1;;;;;196:32:7;;1285:13:1;;;178:51:7;-1:-1:-1;;;;;;;;;;;1712:64:0;-1:-1:-1;1285:8:1;;-1:-1:-1;151:18:7;;1285:13:1;14:221:7;6349:333:1;6412:1;6407:6;;:1;:6;;;6403:272;;6435:57;;;;;14221:2:7;14203:21;;;14260:2;14240:18;;;14233:30;14299:34;14294:2;14279:18;;14272:62;-1:-1:-1;;;14365:2:7;14350:18;;14343:32;14407:3;14392:19;;14019:398;6435:57:1;;;;;;;;6512:55;6546:1;:20;;;;;;;;;;;;;;;-1:-1:-1;;;6546:20:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6546:20:1;;;;6512:55;;;;;;:::i;:::-;;;;;;;;6587;6621:1;:20;;;;;;;;;;;;;;;-1:-1:-1;;;6621:20:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6621:20:1;;;;6587:55;;;;;;:::i;:::-;;;;;;;;6657:6;:4;:6::i;:::-;6349:333;;:::o;17974:159::-;18081:12;;;:22;;-1:-1:-1;;;;;;18081:22:1;-1:-1:-1;;;;;18081:22:1;;;;;;;;;;:12;17974:159::o;19296:122::-;19377:33;19391:4;19405:3;19377:13;:33::i;2474:435:0:-;-1:-1:-1;;;;;;;;;;;3058:55:0;3141:16;2510:367;;2714:67;;2548:11;;-1:-1:-1;;;;;;;;;;;1712:64:0;2647:43;;2714:67;;1712:64;;-1:-1:-1;;;2739:17:0;2774:4;;2714:67;;;:::i;:::-;;;;-1:-1:-1;;2714:67:0;;;;;;;;;;2601:199;;;2714:67;2601:199;;:::i;:::-;;;;-1:-1:-1;;2601:199:0;;;;;;;;;;2565:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2510:367:0;2887:7;:14;;-1:-1:-1;;2887:14:0;;;;;2474:435::o;19663:1118:1:-;19783:12;;;;19820:9;;;;19862:11;;;;19907:10;;;19884:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19783:12:1;;;;19820:9;;;;;;19769:11;;19884:33;;19907:10;;19884:33;;19907:10;19884:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19930:17;19967:4;19973:12;19981:3;19973:7;:12::i;:::-;19950:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;19950:36:1;;;;;;;;;-1:-1:-1;;;;;20002:15:1;;;;;;:10;;;19950:36;20002:15;;;;;;-1:-1:-1;;;;;;20002:21:1;;;;;;;;;19950:36;;-1:-1:-1;20002:21:1;;:15;;20034:34;;20051:3;;20056:11;;20034:34;;:::i;:::-;;;;-1:-1:-1;;20034:34:1;;;;;;;;;20024:45;;20034:34;20024:45;;;;20002:68;;;;;;;;;;-1:-1:-1;20002:68:1;;;;19997:112;;20087:10;20092:4;20087;:10::i;:::-;;19997:112;-1:-1:-1;;;;;20142:15:1;;20119:12;20142:15;;;;;;;;;;;-1:-1:-1;;;;;;20142:21:1;;;;;;;;;20174:34;;20142:21;;20119:12;;20174:34;;20191:3;;20196:11;;20174:34;;:::i;:::-;;;;;;;;;;;;;20164:45;;;;;;20142:68;;;;;;;;;;;;20134:77;;20119:92;;20224:12;20265:17;20286:3;-1:-1:-1;;;;;20286:14:1;20301:4;20286:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20262:44:1;-1:-1:-1;20328:36:1;;-1:-1:-1;20262:44:1;20349:14;20352:11;20349:2;:14;:::i;:::-;20328;:36::i;:::-;20401:28;;-1:-1:-1;;;20401:28:1;;20321:43;;-1:-1:-1;20386:12:1;;-1:-1:-1;;;;;;;;;;;;20401:17:1;;;:28;;20419:3;;20424:4;;20401:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20386:43;;20454:4;20446;:12;20442:173;;20475:128;;-1:-1:-1;;;20475:128:1;;16865:2:7;20475:128:1;;;16847:21:7;16904:3;16884:18;;;16877:31;16944:34;16924:18;;;16917:62;17015:34;16995:18;;;16988:62;17087:34;17066:19;;;17059:63;-1:-1:-1;;;17138:19:7;;;17131:45;17193:19;;20475:128:1;16663:555:7;20475:128:1;20625:34;;-1:-1:-1;;;20625:34:1;;-1:-1:-1;;;;;;;;;;;20625:18:1;;;:34;;20644:3;;20649:4;;20655:3;;20625:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;20677:12:1;;;20670:19;;-1:-1:-1;;;;;;20670:19:1;;;-1:-1:-1;20707:9:1;;;20700:16;;-1:-1:-1;;20700:16:1;;;20727:17;-1:-1:-1;20734:10:1;;20677:12;20727:17;:::i;:::-;20762:4;:11;;20755:18;;;19758:1023;;;;;;;;19663:1118;;:::o;22007:409::-;22066:12;22096:19;22128:1;:8;22139:2;22128:13;;;;:::i;:::-;22118:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22118:24:1;;22096:46;;22158:9;22153:230;22177:1;:8;22173:1;:12;22153:230;;;22207:9;22219:1;22221;22219:4;;;;;;;;:::i;:::-;;;;;;;22207:16;;22355:1;22349;22345:2;22341:10;22337:2;22333:19;22325:6;22321:32;22314:43;22295:77;22187:3;;;;;:::i;:::-;;;;22153:230;;14682:3284;14812:12;;;;14849:9;;;;14891:11;;;;14936:10;;;14913:33;;;;;;;;;;;;;;;;;;;14773:7;;-1:-1:-1;;;;;14812:12:1;;14849:9;;;14891:11;14773:7;;14913:33;;14936:10;;14913:33;;;14936:10;14913:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;15000:15:1;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;15000:21:1;;;;;;;;;15032:34;;14913:33;;-1:-1:-1;15000:21:1;:15;;-1:-1:-1;15032:34:1;;-1:-1:-1;14913:33:1;;15054:11;;15032:34;;:::i;:::-;;;;-1:-1:-1;;15032:34:1;;;;;;;;;15022:45;;15032:34;15022:45;;;;15000:68;;;;;;;;;;-1:-1:-1;15000:68:1;;;;14996:176;;;-1:-1:-1;;;;;15092:15:1;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;15092:21:1;;;;;;;;;15124:34;;15092:21;;:10;15124:34;;15141:3;;15146:11;;15124:34;;:::i;:::-;;;;;;;;;;;;;15114:45;;;;;;15092:68;;;;;;;;;;;;15085:75;;;;;;14682:3284;;;:::o;14996:176::-;15182:17;15219:4;15225:12;15233:3;15225:7;:12::i;:::-;15202:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15182:56;;-1:-1:-1;;;;;;;;;;;13938:37:1;;-1:-1:-1;;;;;15249:19:1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15281:12;15322:17;15343:3;-1:-1:-1;;;;;15343:14:1;15358:4;15343:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15319:44:1;-1:-1:-1;15385:36:1;;-1:-1:-1;15319:44:1;15406:14;15409:11;15406:2;:14;:::i;15385:36::-;15474:35;;-1:-1:-1;;;15474:35:1;;-1:-1:-1;;;;;196:32:7;;15474:35:1;;;178:51:7;15378:43:1;;-1:-1:-1;15446:22:1;;-1:-1:-1;;;;;;;;;;;;15474:21:1;;;151:18:7;;15474:35:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15474:35:1;;;;;;;;;;;;:::i;:::-;15445:64;;;15524:5;:12;15540:1;15524:17;15520:2094;;15558:12;-1:-1:-1;;;;;;;;;;;13938:37:1;;-1:-1:-1;;;;;15573:17:1;;15591:3;15596:5;15602:1;15596:8;;;;;;;;:::i;:::-;;;;;;;15573:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15558:47;-1:-1:-1;15558:47:1;15620:108;;15668:44;15689:3;15702:5;15708:1;15702:8;;;;;;;;:::i;:::-;;;;;;;15694:17;;15668:44;;;;;;;:::i;:::-;;;;;;;;15620:108;15754:4;15746;:12;15742:180;;15779:127;;-1:-1:-1;;;15779:127:1;;18890:2:7;15779:127:1;;;18872:21:7;18929:3;18909:18;;;18902:31;18969:34;18949:18;;;18942:62;19040:34;19020:18;;;19013:62;19112:34;19091:19;;;19084:63;-1:-1:-1;;;19163:19:7;;;19156:44;19217:19;;15779:127:1;18688:554:7;15779:127:1;15941:86;15951:3;15956:4;15989:3;15994:11;15972:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15962:45;;;;;;16017:5;16023:1;16017:8;;;;;;;;:::i;:::-;;;;;;;16009:17;;15941:86;;;;;;;;;:::i;:::-;;;;;;;;16121:5;16127:1;16121:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;16042:15:1;;16113:17;16042:15;;;;;;;;;;-1:-1:-1;;;;;;16042:21:1;;;;;;;;;16074:34;;16121:8;;16042:21;;16074:34;;16091:3;;16096:11;;16074:34;;:::i;:::-;;;;-1:-1:-1;;16074:34:1;;;;;;;;;16064:45;;16074:34;16064:45;;;;16042:68;;;;;;;;;;;;-1:-1:-1;16042:68:1;;;:88;;;;-1:-1:-1;;;;;16145:15:1;;;;16216:4;16145:10;;;:15;;;;;-1:-1:-1;;;;;;16145:21:1;;;;;;;;;16177:34;;16216:4;;-1:-1:-1;16177:34:1;;16194:3;;16199:11;;16177:34;;:::i;:::-;;;;;;;-1:-1:-1;;16177:34:1;;;;;;16167:45;;16177:34;16167:45;;;;16145:68;;;;;;;;;;-1:-1:-1;16145:68:1;:75;;-1:-1:-1;;16145:75:1;;;;;;;;;;-1:-1:-1;15520:2094:1;;;16257:1;16242:5;:12;:16;16238:1376;;;16280:9;16275:1213;16299:5;:12;16295:1;:16;16275:1213;;;16337:12;-1:-1:-1;;;;;;;;;;;13938:37:1;;-1:-1:-1;;;;;16352:17:1;;16370:3;16375:5;16381:1;16375:8;;;;;;;;:::i;:::-;;;;;;;16352:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16337:47;-1:-1:-1;16337:47:1;16403:116;;16455:44;16476:3;16489:5;16495:1;16489:8;;;;;;;;:::i;:::-;;;;;;;16481:17;;16455:44;;;;;;;:::i;:::-;;;;;;;;16403:116;-1:-1:-1;;;;;;;;;;;13938:37:1;;-1:-1:-1;;;;;16563:18:1;;16582:3;16587:5;16593:1;16587:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;16563:53:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16635:12;16666:17;16743:3;-1:-1:-1;;;;;16743:14:1;16758:4;16743:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16725:38:1;;-1:-1:-1;16725:38:1;-1:-1:-1;16793:36:1;16725:38;16814:14;16817:11;16814:2;:14;:::i;16793:36::-;16786:43;;16873:7;:37;;;;;-1:-1:-1;;;16884:4:1;:26;16873:37;16869:546;;;17010:86;17020:3;17025:4;17058:3;17063:11;17041:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17031:45;;;;;;17086:5;17092:1;17086:8;;;;;;;;:::i;:::-;;;;;;;17078:17;;17010:86;;;;;;;;;:::i;:::-;;;;;;;;17198:5;17204:1;17198:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;17119:15:1;;17190:17;17119:15;;;;;;;;;;-1:-1:-1;;;;;;17119:21:1;;;;;;;;;17151:34;;17198:8;;17119:21;;17151:34;;17168:3;;17173:11;;17151:34;;:::i;:::-;;;;;;;;;;;;;17141:45;;;;;;17119:68;;;;;;;;;;;:88;;;;17301:4;17230;:10;;:15;17241:3;-1:-1:-1;;;;;17230:15:1;-1:-1:-1;;;;;17230:15:1;;;;;;;;;;;;:21;17246:4;-1:-1:-1;;;;;17230:21:1;;-1:-1:-1;;;;;17230:21:1;;;;;;;;;;;;;:68;17279:3;17284:11;17262:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17252:45;;;;;;17230:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;13938:37:1;;-1:-1:-1;;;;;17328:18:1;;17347:3;17352:5;17358:1;17352:8;;;;;;;;:::i;:::-;;;;;;;17362:4;17328:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17390:5;;;;;16869:546;-1:-1:-1;;;;;;;;;;;13938:37:1;;-1:-1:-1;;;;;17433:18:1;;17452:3;17457:5;17463:1;17457:8;;;;;;;;:::i;:::-;;;;;;;17467:4;17433:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16318:1170;;;16313:3;;;;;:::i;:::-;;;;16275:1213;;;;16238:1376;;;17520:82;;;-1:-1:-1;;;17520:82:1;;19896:2:7;17520:82:1;;;19878:21:7;19915:18;;;19908:30;;;;19974:34;19954:18;;;19947:62;20045:34;20025:18;;;20018:62;20097:19;;17520:82:1;19694:428:7;17520:82:1;-1:-1:-1;;;;;17634:15:1;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;17634:21:1;;;;;;;;;17666:34;;17634:21;;:15;17666:34;;17683:3;;17688:11;;17666:34;;:::i;:::-;;;;-1:-1:-1;;17666:34:1;;;;;;;;;17656:45;;17666:34;17656:45;;;;17634:68;;;;;;;;;;-1:-1:-1;17634:68:1;;;;17626:128;;;;-1:-1:-1;;;17626:128:1;;20329:2:7;17626:128:1;;;20311:21:7;20368:2;20348:18;;;20341:30;20407:34;20387:18;;;20380:62;-1:-1:-1;;;20458:18:7;;;20451:45;20513:19;;17626:128:1;20127:411:7;17626:128:1;17774:12;;;17767:19;;-1:-1:-1;;;;;;17767:19:1;;;17804:9;;;17797:16;;-1:-1:-1;;17797:16:1;;;17824:17;-1:-1:-1;17831:10:1;;17774:12;17824:17;:::i;:::-;17852:18;17859:11;;;17852:18;;;-1:-1:-1;;;;;17890:15:1;;;;;;;;;;;;-1:-1:-1;;;;;;17890:21:1;;;;;;;;;17922:34;;17890:21;;17852:18;17922:34;;17939:3;;17944:11;;17922:34;;:::i;:::-;;;;;;;;;;;;;17912:45;;;;;;17890:68;;;;;;;;;;;;17883:75;;;;;;;;;14682:3284;;;:::o;21694:305::-;21768:7;21788:11;21812;21837:2;21826:1;:8;:13;:29;;21847:1;:8;21826:29;;;21842:2;21826:29;21812:43;;21871:6;21866:105;21887:3;21883:1;:7;21866:105;;;21953:5;:1;21957;21953:5;:::i;:::-;21927:1;21929:10;21938:1;21929:6;:10;:::i;:::-;21927:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;21927:13:1;21919:40;;21912:47;;;;;21892:3;;;;:::i;:::-;;;;21866:105;;;-1:-1:-1;21988:3:1;;21694:305;-1:-1:-1;;;;21694:305:1:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;240:131:7:-;-1:-1:-1;;;;;315:31:7;;305:42;;295:70;;361:1;358;351:12;376:315;444:6;452;505:2;493:9;484:7;480:23;476:32;473:52;;;521:1;518;511:12;473:52;560:9;547:23;579:31;604:5;579:31;:::i;:::-;629:5;681:2;666:18;;;;653:32;;-1:-1:-1;;;376:315:7:o;696:247::-;755:6;808:2;796:9;787:7;783:23;779:32;776:52;;;824:1;821;814:12;776:52;863:9;850:23;882:31;907:5;882:31;:::i;:::-;932:5;696:247;-1:-1:-1;;;696:247:7:o;948:388::-;1016:6;1024;1077:2;1065:9;1056:7;1052:23;1048:32;1045:52;;;1093:1;1090;1083:12;1045:52;1132:9;1119:23;1151:31;1176:5;1151:31;:::i;:::-;1201:5;-1:-1:-1;1258:2:7;1243:18;;1230:32;1271:33;1230:32;1271:33;:::i;:::-;1323:7;1313:17;;;948:388;;;;;:::o;1341:127::-;1402:10;1397:3;1393:20;1390:1;1383:31;1433:4;1430:1;1423:15;1457:4;1454:1;1447:15;1473:275;1544:2;1538:9;1609:2;1590:13;;-1:-1:-1;;1586:27:7;1574:40;;1644:18;1629:34;;1665:22;;;1626:62;1623:88;;;1691:18;;:::i;:::-;1727:2;1720:22;1473:275;;-1:-1:-1;1473:275:7:o;1753:187::-;1802:4;1835:18;1827:6;1824:30;1821:56;;;1857:18;;:::i;:::-;-1:-1:-1;1923:2:7;1902:15;-1:-1:-1;;1898:29:7;1929:4;1894:40;;1753:187::o;1945:338::-;2010:5;2039:53;2055:36;2084:6;2055:36;:::i;:::-;2039:53;:::i;:::-;2030:62;;2115:6;2108:5;2101:21;2155:3;2146:6;2141:3;2137:16;2134:25;2131:45;;;2172:1;2169;2162:12;2131:45;2221:6;2216:3;2209:4;2202:5;2198:16;2185:43;2275:1;2268:4;2259:6;2252:5;2248:18;2244:29;2237:40;1945:338;;;;;:::o;2288:222::-;2331:5;2384:3;2377:4;2369:6;2365:17;2361:27;2351:55;;2402:1;2399;2392:12;2351:55;2424:80;2500:3;2491:6;2478:20;2471:4;2463:6;2459:17;2424:80;:::i;2515:671::-;2602:6;2610;2663:2;2651:9;2642:7;2638:23;2634:32;2631:52;;;2679:1;2676;2669:12;2631:52;2719:9;2706:23;2748:18;2789:2;2781:6;2778:14;2775:34;;;2805:1;2802;2795:12;2775:34;2828:50;2870:7;2861:6;2850:9;2846:22;2828:50;:::i;:::-;2818:60;;2931:2;2920:9;2916:18;2903:32;2887:48;;2960:2;2950:8;2947:16;2944:36;;;2976:1;2973;2966:12;2944:36;-1:-1:-1;2999:24:7;;3054:4;3046:13;;3042:27;-1:-1:-1;3032:55:7;;3083:1;3080;3073:12;3032:55;3106:74;3172:7;3167:2;3154:16;3149:2;3145;3141:11;3106:74;:::i;:::-;3096:84;;;2515:671;;;;;:::o;3399:180::-;3458:6;3511:2;3499:9;3490:7;3486:23;3482:32;3479:52;;;3527:1;3524;3517:12;3479:52;-1:-1:-1;3550:23:7;;3399:180;-1:-1:-1;3399:180:7:o;3803:456::-;3880:6;3888;3896;3949:2;3937:9;3928:7;3924:23;3920:32;3917:52;;;3965:1;3962;3955:12;3917:52;4004:9;3991:23;4023:31;4048:5;4023:31;:::i;:::-;4073:5;-1:-1:-1;4130:2:7;4115:18;;4102:32;4143:33;4102:32;4143:33;:::i;:::-;3803:456;;4195:7;;-1:-1:-1;;;4249:2:7;4234:18;;;;4221:32;;3803:456::o;4264:316::-;4341:6;4349;4357;4410:2;4398:9;4389:7;4385:23;4381:32;4378:52;;;4426:1;4423;4416:12;4378:52;-1:-1:-1;;4449:23:7;;;4519:2;4504:18;;4491:32;;-1:-1:-1;4570:2:7;4555:18;;;4542:32;;4264:316;-1:-1:-1;4264:316:7:o;4767:118::-;4853:5;4846:13;4839:21;4832:5;4829:32;4819:60;;4875:1;4872;4865:12;4890:592;4973:6;4981;4989;4997;5050:3;5038:9;5029:7;5025:23;5021:33;5018:53;;;5067:1;5064;5057:12;5018:53;5106:9;5093:23;5125:31;5150:5;5125:31;:::i;:::-;5175:5;-1:-1:-1;5232:2:7;5217:18;;5204:32;5245:33;5204:32;5245:33;:::i;:::-;5297:7;-1:-1:-1;5351:2:7;5336:18;;5323:32;;-1:-1:-1;5407:2:7;5392:18;;5379:32;5420:30;5379:32;5420:30;:::i;:::-;4890:592;;;;-1:-1:-1;4890:592:7;;-1:-1:-1;;4890:592:7:o;5487:322::-;5556:6;5609:2;5597:9;5588:7;5584:23;5580:32;5577:52;;;5625:1;5622;5615:12;5577:52;5665:9;5652:23;5698:18;5690:6;5687:30;5684:50;;;5730:1;5727;5720:12;5684:50;5753;5795:7;5786:6;5775:9;5771:22;5753:50;:::i;:::-;5743:60;5487:322;-1:-1:-1;;;;5487:322:7:o;6196:251::-;6266:6;6319:2;6307:9;6298:7;6294:23;6290:32;6287:52;;;6335:1;6332;6325:12;6287:52;6367:9;6361:16;6386:31;6411:5;6386:31;:::i;7022:274::-;-1:-1:-1;;;;;7214:32:7;;;;7196:51;;7278:2;7263:18;;7256:34;7184:2;7169:18;;7022:274::o;7301:245::-;7368:6;7421:2;7409:9;7400:7;7396:23;7392:32;7389:52;;;7437:1;7434;7427:12;7389:52;7469:9;7463:16;7488:28;7510:5;7488:28;:::i;8185:258::-;8257:1;8267:113;8281:6;8278:1;8275:13;8267:113;;;8357:11;;;8351:18;8338:11;;;8331:39;8303:2;8296:10;8267:113;;;8398:6;8395:1;8392:13;8389:48;;;-1:-1:-1;;8433:1:7;8415:16;;8408:27;8185:258::o;8448:::-;8490:3;8528:5;8522:12;8555:6;8550:3;8543:19;8571:63;8627:6;8620:4;8615:3;8611:14;8604:4;8597:5;8593:16;8571:63;:::i;:::-;8688:2;8667:15;-1:-1:-1;;8663:29:7;8654:39;;;;8695:4;8650:50;;8448:258;-1:-1:-1;;8448:258:7:o;8711:220::-;8860:2;8849:9;8842:21;8823:4;8880:45;8921:2;8910:9;8906:18;8898:6;8880:45;:::i;8936:635::-;9015:6;9068:2;9056:9;9047:7;9043:23;9039:32;9036:52;;;9084:1;9081;9074:12;9036:52;9117:9;9111:16;9150:18;9142:6;9139:30;9136:50;;;9182:1;9179;9172:12;9136:50;9205:22;;9258:4;9250:13;;9246:27;-1:-1:-1;9236:55:7;;9287:1;9284;9277:12;9236:55;9316:2;9310:9;9341:49;9357:32;9386:2;9357:32;:::i;9341:49::-;9413:2;9406:5;9399:17;9453:7;9448:2;9443;9439;9435:11;9431:20;9428:33;9425:53;;;9474:1;9471;9464:12;9425:53;9487:54;9538:2;9533;9526:5;9522:14;9517:2;9513;9509:11;9487:54;:::i;:::-;9560:5;8936:635;-1:-1:-1;;;;;8936:635:7:o;9576:466::-;9751:3;9789:6;9783:13;9805:53;9851:6;9846:3;9839:4;9831:6;9827:17;9805:53;:::i;:::-;9921:13;;9880:16;;;;9943:57;9921:13;9880:16;9977:4;9965:17;;9943:57;:::i;:::-;10016:20;;9576:466;-1:-1:-1;;;;9576:466:7:o;10465:127::-;10526:10;10521:3;10517:20;10514:1;10507:31;10557:4;10554:1;10547:15;10581:4;10578:1;10571:15;10597:125;10637:4;10665:1;10662;10659:8;10656:34;;;10670:18;;:::i;:::-;-1:-1:-1;10707:9:7;;10597:125::o;11154:135::-;11193:3;11214:17;;;11211:43;;11234:18;;:::i;:::-;-1:-1:-1;11281:1:7;11270:13;;11154:135::o;11294:209::-;11326:1;11352;11342:132;;11396:10;11391:3;11387:20;11384:1;11377:31;11431:4;11428:1;11421:15;11459:4;11456:1;11449:15;11342:132;-1:-1:-1;11488:9:7;;11294:209::o;11508:128::-;11548:3;11579:1;11575:6;11572:1;11569:13;11566:39;;;11585:18;;:::i;:::-;-1:-1:-1;11621:9:7;;11508:128::o;12056:274::-;12185:3;12223:6;12217:13;12239:53;12285:6;12280:3;12273:4;12265:6;12261:17;12239:53;:::i;:::-;12308:16;;;;;12056:274;-1:-1:-1;;12056:274:7:o;12335:184::-;12405:6;12458:2;12446:9;12437:7;12433:23;12429:32;12426:52;;;12474:1;12471;12464:12;12426:52;-1:-1:-1;12497:16:7;;12335:184;-1:-1:-1;12335:184:7:o;13215:371::-;-1:-1:-1;;;;;;13400:33:7;;13388:46;;13457:13;;13370:3;;13479:61;13457:13;13529:1;13520:11;;13513:4;13501:17;;13479:61;:::i;:::-;13560:16;;;;13578:1;13556:24;;13215:371;-1:-1:-1;;;13215:371:7:o;14422:452::-;14672:2;14661:9;14654:21;14711:2;14706;14695:9;14691:18;14684:30;-1:-1:-1;;;14745:2:7;14734:9;14730:18;14723:40;14801:3;14794:4;14783:9;14779:20;14772:33;14635:4;14822:46;14863:3;14852:9;14848:19;14840:6;14822:46;:::i;14879:452::-;15129:2;15118:9;15111:21;15168:2;15163;15152:9;15148:18;15141:30;-1:-1:-1;;;15202:2:7;15191:9;15187:18;15180:40;15258:3;15251:4;15240:9;15236:20;15229:33;15092:4;15279:46;15320:3;15309:9;15305:19;15297:6;15279:46;:::i;15336:345::-;-1:-1:-1;;;;;15556:32:7;;;;15538:51;;15620:2;15605:18;;15598:34;;;;15663:2;15648:18;;15641:34;15526:2;15511:18;;15336:345::o;15686:610::-;15932:13;;15875:3;;15906;;15985:4;16012:15;;;15875:3;16055:175;16069:6;16066:1;16063:13;16055:175;;;16132:13;;16118:28;;16168:14;;;;16205:15;;;;16091:1;16084:9;16055:175;;;-1:-1:-1;;16239:21:7;;;-1:-1:-1;16276:14:7;;;;;-1:-1:-1;;;15686:610:7:o;16301:168::-;16341:7;16407:1;16403;16399:6;16395:14;16392:1;16389:21;16384:1;16377:9;16370:17;16366:45;16363:71;;;16414:18;;:::i;:::-;-1:-1:-1;16454:9:7;;16301:168::o;17223:127::-;17284:10;17279:3;17275:20;17272:1;17265:31;17315:4;17312:1;17305:15;17339:4;17336:1;17329:15;17355:709;17420:5;17473:3;17466:4;17458:6;17454:17;17450:27;17440:55;;17491:1;17488;17481:12;17440:55;17520:6;17514:13;17546:4;17569:18;17565:2;17562:26;17559:52;;;17591:18;;:::i;:::-;17637:2;17634:1;17630:10;17660:28;17684:2;17680;17676:11;17660:28;:::i;:::-;17722:15;;;17792;;;17788:24;;;17753:12;;;;17824:15;;;17821:35;;;17852:1;17849;17842:12;17821:35;17888:2;17880:6;17876:15;17865:26;;17900:135;17916:6;17911:3;17908:15;17900:135;;;17982:10;;17970:23;;17933:12;;;;18013;;;;17900:135;;;18053:5;17355:709;-1:-1:-1;;;;;;;17355:709:7:o;18069:614::-;18198:6;18206;18259:2;18247:9;18238:7;18234:23;18230:32;18227:52;;;18275:1;18272;18265:12;18227:52;18308:9;18302:16;18337:18;18378:2;18370:6;18367:14;18364:34;;;18394:1;18391;18384:12;18364:34;18417:72;18481:7;18472:6;18461:9;18457:22;18417:72;:::i;:::-;18407:82;;18535:2;18524:9;18520:18;18514:25;18498:41;;18564:2;18554:8;18551:16;18548:36;;;18580:1;18577;18570:12;18548:36;;18603:74;18669:7;18658:8;18647:9;18643:24;18603:74;:::i;19247:442::-;-1:-1:-1;;;;;19494:32:7;;;;19476:51;;-1:-1:-1;;;;;;19563:33:7;;;;19558:2;19543:18;;19536:61;19628:2;19613:18;;19606:34;19671:2;19656:18;;19649:34;19463:3;19448:19;;19247:442::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "a()": "0dbe671f",
    "bound(uint256,uint256,uint256)": "5a6c1eed",
    "deal(address,address,uint256)": "6bce989b",
    "deal(address,address,uint256,bool)": "97754ae9",
    "deal(address,uint256)": "c88a5e6d",
    "deployCode(string)": "9a8325a0",
    "deployCode(string,bytes)": "29ce9dde",
    "failed()": "ba414fa6",
    "hoax(address)": "233240ee",
    "hoax(address,address)": "29a9e300",
    "hoax(address,address,uint256)": "af9bbe5f",
    "hoax(address,uint256)": "e9a79a7b",
    "rewind(uint256)": "2d6c17a3",
    "setUp()": "0a9254e4",
    "skip(uint256)": "b9c071b4",
    "startHoax(address)": "6f597075",
    "startHoax(address,address)": "d06d8229",
    "startHoax(address,address,uint256)": "3bf82db1",
    "startHoax(address,uint256)": "108554f2",
    "testAddIsRemoveAdmin()": "e915c1f7",
    "testAddIsRemoveAmbulance()": "1e1bd874",
    "testAddIsRemoveHospital()": "a3efc601",
    "testAddIsRemoveInitiator()": "608c84b8",
    "tip(address,address,uint256)": "d82555f1",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"WARNING_Deprecated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"a\",\"outputs\":[{\"internalType\":\"contract Accounts\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"bound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"adjust\",\"type\":\"bool\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"what\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"what\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"hoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"}],\"name\":\"hoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"hoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"hoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"rewind\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"startHoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"startHoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"startHoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"}],\"name\":\"startHoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAddIsRemoveAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAddIsRemoveAmbulance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAddIsRemoveHospital\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAddIsRemoveInitiator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"tip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Accounts.t.sol\":\"AccountsTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xd4cc3f57e7af003954200ec4ee92e8f189885cba55ae9cf87e7a59985d8e963e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://64df22826aa96e9c9eaebb698f5940ecafe95d72782b60b8f6fd68f6cd023bda\",\"dweb:/ipfs/QmSJGqC4GyyHdMUc2ViatN6wKZNBiaxRzntKH7JwM2UQ8R\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x8f69737c0cc46d65d3c664861cbd72830d1751c984a47568e3b57feef1b3ba72\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://f449567d26cae65e839147262dbfe64aee377bc3814acfa0fb88aba602c7a23b\",\"dweb:/ipfs/Qmf7X4Shq24N8UdVqjKH2WppT5dLiJWeYFEVo1c9tbyMcD\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x3a4cbaeb76ea54693944848130a43d292450a4da88538d3045fde32628959d41\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://2b6e510b1b272d26540b64fdf7b3dcb36aef30ef2bb6962e241c4d43516cb490\",\"dweb:/ipfs/QmUdu2LzkdUjR9E1GPPiFzz9wPXy4k3kz2XZ2TWLf7A4br\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42\",\"dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x01bde27c667a925905685599b65e6daf424beba80860b68187cc266350f3d704\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18e6ba16127930324e9c4d4a42f077e1bfe38257726724859f6441e22bef35d4\",\"dweb:/ipfs/QmbyMUzdSHWQEQcZ3Yz4j5iRhEj472cvcwHNb9Eq3esGJA\"]},\"src/Accounts.sol\":{\"keccak256\":\"0x599e7974132f6a7b89d2ad97a370933015101387b1d8776ff786ae188613a864\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bfa88ee1f1592d105fc9bb6c0b9838c1df3e3665d6cf53ba5cc30c3eb1dc998b\",\"dweb:/ipfs/QmX2ff6zja8cPsSxFwCW2SShnET4mM6XuzgAofJmWwrQgG\"]},\"test/Accounts.t.sol\":{\"keccak256\":\"0xee2a6786db962cb9a4c92e5efc97e58f707c063e29778dabaf6f7ae5e8911db3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e2edb624c5f6eb846e80b998db884ed4aa85172ce7e091e89bcc95a86127118d\",\"dweb:/ipfs/QmRT2sNJCnVDY23RS62kBpNBVsroTcDXFvbdz4yNSER1FZ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "msg",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WARNING_Deprecated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "a",
          "outputs": [
            {
              "internalType": "contract Accounts",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "min",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "max",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bound",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "result",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deal"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "adjust",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deal"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deal"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "what",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "args",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployCode",
          "outputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "what",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployCode",
          "outputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "hoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "origin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "hoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "origin",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "hoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "hoax"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rewind"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "skip"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startHoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "origin",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startHoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startHoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "origin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startHoax"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddIsRemoveAdmin"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddIsRemoveAmbulance"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddIsRemoveHospital"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddIsRemoveInitiator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "tip"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Accounts.t.sol": "AccountsTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xd4cc3f57e7af003954200ec4ee92e8f189885cba55ae9cf87e7a59985d8e963e",
        "urls": [
          "bzz-raw://64df22826aa96e9c9eaebb698f5940ecafe95d72782b60b8f6fd68f6cd023bda",
          "dweb:/ipfs/QmSJGqC4GyyHdMUc2ViatN6wKZNBiaxRzntKH7JwM2UQ8R"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x8f69737c0cc46d65d3c664861cbd72830d1751c984a47568e3b57feef1b3ba72",
        "urls": [
          "bzz-raw://f449567d26cae65e839147262dbfe64aee377bc3814acfa0fb88aba602c7a23b",
          "dweb:/ipfs/Qmf7X4Shq24N8UdVqjKH2WppT5dLiJWeYFEVo1c9tbyMcD"
        ],
        "license": "Unlicense"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x3a4cbaeb76ea54693944848130a43d292450a4da88538d3045fde32628959d41",
        "urls": [
          "bzz-raw://2b6e510b1b272d26540b64fdf7b3dcb36aef30ef2bb6962e241c4d43516cb490",
          "dweb:/ipfs/QmUdu2LzkdUjR9E1GPPiFzz9wPXy4k3kz2XZ2TWLf7A4br"
        ],
        "license": "Unlicense"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837",
        "urls": [
          "bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42",
          "dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x01bde27c667a925905685599b65e6daf424beba80860b68187cc266350f3d704",
        "urls": [
          "bzz-raw://18e6ba16127930324e9c4d4a42f077e1bfe38257726724859f6441e22bef35d4",
          "dweb:/ipfs/QmbyMUzdSHWQEQcZ3Yz4j5iRhEj472cvcwHNb9Eq3esGJA"
        ],
        "license": "MIT"
      },
      "src/Accounts.sol": {
        "keccak256": "0x599e7974132f6a7b89d2ad97a370933015101387b1d8776ff786ae188613a864",
        "urls": [
          "bzz-raw://bfa88ee1f1592d105fc9bb6c0b9838c1df3e3665d6cf53ba5cc30c3eb1dc998b",
          "dweb:/ipfs/QmX2ff6zja8cPsSxFwCW2SShnET4mM6XuzgAofJmWwrQgG"
        ],
        "license": "UNLICENSED"
      },
      "test/Accounts.t.sol": {
        "keccak256": "0xee2a6786db962cb9a4c92e5efc97e58f707c063e29778dabaf6f7ae5e8911db3",
        "urls": [
          "bzz-raw://e2edb624c5f6eb846e80b998db884ed4aa85172ce7e091e89bcc95a86127118d",
          "dweb:/ipfs/QmRT2sNJCnVDY23RS62kBpNBVsroTcDXFvbdz4yNSER1FZ"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Accounts.t.sol",
    "id": 21358,
    "exportedSymbols": {
      "Accounts": [
        20994
      ],
      "AccountsTest": [
        21357
      ],
      "DSTest": [
        1786
      ],
      "StdStorage": [
        2973
      ],
      "Test": [
        2875
      ],
      "Vm": [
        4449
      ],
      "console": [
        12513
      ],
      "console2": [
        20577
      ],
      "stdError": [
        2945
      ],
      "stdMath": [
        4210
      ],
      "stdStorage": [
        4063
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:3717:6",
    "nodes": [
      {
        "id": 20996,
        "nodeType": "PragmaDirective",
        "src": "0:23:6",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 20997,
        "nodeType": "ImportDirective",
        "src": "27:28:6",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21358,
        "sourceUnit": 4211,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 20998,
        "nodeType": "ImportDirective",
        "src": "57:26:6",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21358,
        "sourceUnit": 4450,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 20999,
        "nodeType": "ImportDirective",
        "src": "87:29:6",
        "nodes": [],
        "absolutePath": "src/Accounts.sol",
        "file": "../src/Accounts.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21358,
        "sourceUnit": 20995,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21357,
        "nodeType": "ContractDefinition",
        "src": "162:3555:6",
        "nodes": [
          {
            "id": 21004,
            "nodeType": "VariableDeclaration",
            "src": "199:17:6",
            "nodes": [],
            "constant": false,
            "functionSelector": "0dbe671f",
            "mutability": "mutable",
            "name": "a",
            "nameLocation": "215:1:6",
            "scope": 21357,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Accounts_$20994",
              "typeString": "contract Accounts"
            },
            "typeName": {
              "id": 21003,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21002,
                "name": "Accounts",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 20994,
                "src": "199:8:6"
              },
              "referencedDeclaration": 20994,
              "src": "199:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Accounts_$20994",
                "typeString": "contract Accounts"
              }
            },
            "visibility": "public"
          },
          {
            "id": 21006,
            "nodeType": "VariableDeclaration",
            "src": "223:18:6",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "superAdmin",
            "nameLocation": "231:10:6",
            "scope": 21357,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21005,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "223:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21008,
            "nodeType": "VariableDeclaration",
            "src": "278:13:6",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "286:5:6",
            "scope": 21357,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21007,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "278:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21010,
            "nodeType": "VariableDeclaration",
            "src": "298:17:6",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "ambulance",
            "nameLocation": "306:9:6",
            "scope": 21357,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21009,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "298:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21012,
            "nodeType": "VariableDeclaration",
            "src": "322:17:6",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "initiator",
            "nameLocation": "330:9:6",
            "scope": 21357,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21011,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "322:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21014,
            "nodeType": "VariableDeclaration",
            "src": "346:16:6",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "hospital",
            "nameLocation": "354:8:6",
            "scope": 21357,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21013,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "346:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21016,
            "nodeType": "VariableDeclaration",
            "src": "391:8:6",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "res",
            "nameLocation": "396:3:6",
            "scope": 21357,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 21015,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "391:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21068,
            "nodeType": "FunctionDefinition",
            "src": "442:405:6",
            "nodes": [],
            "body": {
              "id": 21067,
              "nodeType": "Block",
              "src": "466:381:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 21024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21019,
                      "name": "superAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21006,
                      "src": "582:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 21022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "603:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 21020,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1811,
                          "src": "595:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$4449",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 21021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4271,
                        "src": "595:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) external returns (address)"
                        }
                      },
                      "id": 21023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "595:10:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "582:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21025,
                  "nodeType": "ExpressionStatement",
                  "src": "582:23:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21029,
                        "name": "superAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21006,
                        "src": "625:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21026,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1811,
                        "src": "616:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4449",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4298,
                      "src": "616:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "616:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21031,
                  "nodeType": "ExpressionStatement",
                  "src": "616:20:6"
                },
                {
                  "expression": {
                    "id": 21037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21032,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21004,
                      "src": "647:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Accounts_$20994",
                        "typeString": "contract Accounts"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "651:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Accounts_$20994_$",
                          "typeString": "function () returns (contract Accounts)"
                        },
                        "typeName": {
                          "id": 21034,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21033,
                            "name": "Accounts",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 20994,
                            "src": "655:8:6"
                          },
                          "referencedDeclaration": 20994,
                          "src": "655:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Accounts_$20994",
                            "typeString": "contract Accounts"
                          }
                        }
                      },
                      "id": 21036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "651:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Accounts_$20994",
                        "typeString": "contract Accounts"
                      }
                    },
                    "src": "647:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Accounts_$20994",
                      "typeString": "contract Accounts"
                    }
                  },
                  "id": 21038,
                  "nodeType": "ExpressionStatement",
                  "src": "647:18:6"
                },
                {
                  "expression": {
                    "id": 21044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21039,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21008,
                      "src": "723:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 21042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "739:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 21040,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1811,
                          "src": "731:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$4449",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 21041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4271,
                        "src": "731:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) external returns (address)"
                        }
                      },
                      "id": 21043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "731:10:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "723:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21045,
                  "nodeType": "ExpressionStatement",
                  "src": "723:18:6"
                },
                {
                  "expression": {
                    "id": 21051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21046,
                      "name": "ambulance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21010,
                      "src": "752:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 21049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "772:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "id": 21047,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1811,
                          "src": "764:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$4449",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 21048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4271,
                        "src": "764:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) external returns (address)"
                        }
                      },
                      "id": 21050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "764:10:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "752:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21052,
                  "nodeType": "ExpressionStatement",
                  "src": "752:22:6"
                },
                {
                  "expression": {
                    "id": 21058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21053,
                      "name": "initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21012,
                      "src": "785:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "33",
                          "id": 21056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "805:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "expression": {
                          "id": 21054,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1811,
                          "src": "797:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$4449",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 21055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4271,
                        "src": "797:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) external returns (address)"
                        }
                      },
                      "id": 21057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "797:10:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "785:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21059,
                  "nodeType": "ExpressionStatement",
                  "src": "785:22:6"
                },
                {
                  "expression": {
                    "id": 21065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21060,
                      "name": "hospital",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21014,
                      "src": "818:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "34",
                          "id": 21063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "837:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          }
                        ],
                        "expression": {
                          "id": 21061,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1811,
                          "src": "829:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$4449",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 21062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4271,
                        "src": "829:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) external returns (address)"
                        }
                      },
                      "id": 21064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "829:10:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "818:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21066,
                  "nodeType": "ExpressionStatement",
                  "src": "818:21:6"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "451:5:6",
            "parameters": {
              "id": 21017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "456:2:6"
            },
            "returnParameters": {
              "id": 21018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:6"
            },
            "scope": 21357,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21131,
            "nodeType": "FunctionDefinition",
            "src": "925:543:6",
            "nodes": [],
            "body": {
              "id": 21130,
              "nodeType": "Block",
              "src": "964:504:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21074,
                        "name": "superAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21006,
                        "src": "1027:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21071,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1811,
                        "src": "1013:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4449",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4303,
                      "src": "1013:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1013:25:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21076,
                  "nodeType": "ExpressionStatement",
                  "src": "1013:25:6"
                },
                {
                  "expression": {
                    "id": 21082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21077,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21016,
                      "src": "1090:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21080,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21008,
                          "src": "1106:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 21078,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21004,
                          "src": "1096:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Accounts_$20994",
                            "typeString": "contract Accounts"
                          }
                        },
                        "id": 21079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isAdmin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20944,
                        "src": "1096:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 21081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1096:16:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1090:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21083,
                  "nodeType": "ExpressionStatement",
                  "src": "1090:22:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21085,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21016,
                        "src": "1136:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 21086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1141:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21084,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2402,
                        2427,
                        2461,
                        2490,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 2402,
                      "src": "1127:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 21087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1127:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21088,
                  "nodeType": "ExpressionStatement",
                  "src": "1127:20:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21092,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21008,
                        "src": "1211:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21089,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "1200:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Accounts_$20994",
                          "typeString": "contract Accounts"
                        }
                      },
                      "id": 21091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20964,
                      "src": "1200:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1200:17:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21094,
                  "nodeType": "ExpressionStatement",
                  "src": "1200:17:6"
                },
                {
                  "expression": {
                    "id": 21100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21095,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21016,
                      "src": "1232:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21098,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21008,
                          "src": "1248:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 21096,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21004,
                          "src": "1238:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Accounts_$20994",
                            "typeString": "contract Accounts"
                          }
                        },
                        "id": 21097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isAdmin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20944,
                        "src": "1238:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 21099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1238:16:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1232:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21101,
                  "nodeType": "ExpressionStatement",
                  "src": "1232:22:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21103,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21016,
                        "src": "1278:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 21104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1283:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21102,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2402,
                        2427,
                        2461,
                        2490,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 2402,
                      "src": "1269:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 21105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1269:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21106,
                  "nodeType": "ExpressionStatement",
                  "src": "1269:19:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21110,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21008,
                        "src": "1357:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21107,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "1343:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Accounts_$20994",
                          "typeString": "contract Accounts"
                        }
                      },
                      "id": 21109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20993,
                      "src": "1343:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1343:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21112,
                  "nodeType": "ExpressionStatement",
                  "src": "1343:20:6"
                },
                {
                  "expression": {
                    "id": 21118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21113,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21016,
                      "src": "1378:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21116,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21008,
                          "src": "1394:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 21114,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21004,
                          "src": "1384:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Accounts_$20994",
                            "typeString": "contract Accounts"
                          }
                        },
                        "id": 21115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isAdmin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20944,
                        "src": "1384:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 21117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1384:16:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1378:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21119,
                  "nodeType": "ExpressionStatement",
                  "src": "1378:22:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21121,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21016,
                        "src": "1424:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 21122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1429:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21120,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2402,
                        2427,
                        2461,
                        2490,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 2402,
                      "src": "1415:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 21123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1415:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21124,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:20:6"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21125,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1811,
                        "src": "1446:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4449",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4320,
                      "src": "1446:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1446:14:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21129,
                  "nodeType": "ExpressionStatement",
                  "src": "1446:14:6"
                }
              ]
            },
            "functionSelector": "e915c1f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddIsRemoveAdmin",
            "nameLocation": "934:20:6",
            "parameters": {
              "id": 21069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "954:2:6"
            },
            "returnParameters": {
              "id": 21070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "964:0:6"
            },
            "scope": 21357,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21206,
            "nodeType": "FunctionDefinition",
            "src": "1550:671:6",
            "nodes": [],
            "body": {
              "id": 21205,
              "nodeType": "Block",
              "src": "1593:628:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21137,
                        "name": "superAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21006,
                        "src": "1639:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21134,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1811,
                        "src": "1630:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4449",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4298,
                      "src": "1630:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1630:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21139,
                  "nodeType": "ExpressionStatement",
                  "src": "1630:20:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21143,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21008,
                        "src": "1672:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21140,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "1661:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Accounts_$20994",
                          "typeString": "contract Accounts"
                        }
                      },
                      "id": 21142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20964,
                      "src": "1661:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1661:17:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21145,
                  "nodeType": "ExpressionStatement",
                  "src": "1661:17:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21149,
                        "name": "superAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21006,
                        "src": "1747:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21146,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1811,
                        "src": "1733:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4449",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4303,
                      "src": "1733:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1733:25:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21151,
                  "nodeType": "ExpressionStatement",
                  "src": "1733:25:6"
                },
                {
                  "expression": {
                    "id": 21157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21152,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21016,
                      "src": "1806:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21155,
                          "name": "ambulance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21010,
                          "src": "1826:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 21153,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21004,
                          "src": "1812:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Accounts_$20994",
                            "typeString": "contract Accounts"
                          }
                        },
                        "id": 21154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isAmbulance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20642,
                        "src": "1812:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 21156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1812:24:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1806:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21158,
                  "nodeType": "ExpressionStatement",
                  "src": "1806:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21160,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21016,
                        "src": "1860:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 21161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1865:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21159,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2402,
                        2427,
                        2461,
                        2490,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 2402,
                      "src": "1851:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 21162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1851:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21163,
                  "nodeType": "ExpressionStatement",
                  "src": "1851:20:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21167,
                        "name": "ambulance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21010,
                        "src": "1937:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21164,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "1922:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Accounts_$20994",
                          "typeString": "contract Accounts"
                        }
                      },
                      "id": 21166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addAmbulance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20700,
                      "src": "1922:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1922:25:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21169,
                  "nodeType": "ExpressionStatement",
                  "src": "1922:25:6"
                },
                {
                  "expression": {
                    "id": 21175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21170,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21016,
                      "src": "1962:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21173,
                          "name": "ambulance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21010,
                          "src": "1982:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 21171,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21004,
                          "src": "1968:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Accounts_$20994",
                            "typeString": "contract Accounts"
                          }
                        },
                        "id": 21172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isAmbulance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20642,
                        "src": "1968:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 21174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1968:24:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1962:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21176,
                  "nodeType": "ExpressionStatement",
                  "src": "1962:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21178,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21016,
                        "src": "2016:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 21179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2021:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21177,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2402,
                        2427,
                        2461,
                        2490,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 2402,
                      "src": "2007:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 21180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2007:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21181,
                  "nodeType": "ExpressionStatement",
                  "src": "2007:19:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21185,
                        "name": "ambulance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21010,
                        "src": "2098:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21182,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "2080:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Accounts_$20994",
                          "typeString": "contract Accounts"
                        }
                      },
                      "id": 21184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeAmbulance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20731,
                      "src": "2080:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2080:28:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21187,
                  "nodeType": "ExpressionStatement",
                  "src": "2080:28:6"
                },
                {
                  "expression": {
                    "id": 21193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21188,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21016,
                      "src": "2123:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21191,
                          "name": "ambulance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21010,
                          "src": "2143:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 21189,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21004,
                          "src": "2129:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Accounts_$20994",
                            "typeString": "contract Accounts"
                          }
                        },
                        "id": 21190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isAmbulance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20642,
                        "src": "2129:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 21192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2129:24:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2123:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21194,
                  "nodeType": "ExpressionStatement",
                  "src": "2123:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21196,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21016,
                        "src": "2177:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 21197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2182:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21195,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2402,
                        2427,
                        2461,
                        2490,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 2402,
                      "src": "2168:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 21198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2168:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21199,
                  "nodeType": "ExpressionStatement",
                  "src": "2168:20:6"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21200,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1811,
                        "src": "2199:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4449",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4320,
                      "src": "2199:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2199:14:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21204,
                  "nodeType": "ExpressionStatement",
                  "src": "2199:14:6"
                }
              ]
            },
            "functionSelector": "1e1bd874",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddIsRemoveAmbulance",
            "nameLocation": "1559:24:6",
            "parameters": {
              "id": 21132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1583:2:6"
            },
            "returnParameters": {
              "id": 21133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1593:0:6"
            },
            "scope": 21357,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21281,
            "nodeType": "FunctionDefinition",
            "src": "2303:671:6",
            "nodes": [],
            "body": {
              "id": 21280,
              "nodeType": "Block",
              "src": "2346:628:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21212,
                        "name": "superAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21006,
                        "src": "2392:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21209,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1811,
                        "src": "2383:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4449",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4298,
                      "src": "2383:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2383:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21214,
                  "nodeType": "ExpressionStatement",
                  "src": "2383:20:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21218,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21008,
                        "src": "2425:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21215,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "2414:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Accounts_$20994",
                          "typeString": "contract Accounts"
                        }
                      },
                      "id": 21217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20964,
                      "src": "2414:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2414:17:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21220,
                  "nodeType": "ExpressionStatement",
                  "src": "2414:17:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21224,
                        "name": "superAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21006,
                        "src": "2500:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21221,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1811,
                        "src": "2486:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4449",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4303,
                      "src": "2486:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2486:25:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21226,
                  "nodeType": "ExpressionStatement",
                  "src": "2486:25:6"
                },
                {
                  "expression": {
                    "id": 21232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21227,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21016,
                      "src": "2559:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21230,
                          "name": "initiator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21012,
                          "src": "2579:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 21228,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21004,
                          "src": "2565:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Accounts_$20994",
                            "typeString": "contract Accounts"
                          }
                        },
                        "id": 21229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isInitiator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20743,
                        "src": "2565:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 21231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2565:24:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2559:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21233,
                  "nodeType": "ExpressionStatement",
                  "src": "2559:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21235,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21016,
                        "src": "2613:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 21236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2618:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21234,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2402,
                        2427,
                        2461,
                        2490,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 2402,
                      "src": "2604:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 21237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2604:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21238,
                  "nodeType": "ExpressionStatement",
                  "src": "2604:20:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21242,
                        "name": "initiator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21012,
                        "src": "2690:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21239,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "2675:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Accounts_$20994",
                          "typeString": "contract Accounts"
                        }
                      },
                      "id": 21241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addInitiator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20800,
                      "src": "2675:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2675:25:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21244,
                  "nodeType": "ExpressionStatement",
                  "src": "2675:25:6"
                },
                {
                  "expression": {
                    "id": 21250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21245,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21016,
                      "src": "2715:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21248,
                          "name": "initiator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21012,
                          "src": "2735:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 21246,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21004,
                          "src": "2721:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Accounts_$20994",
                            "typeString": "contract Accounts"
                          }
                        },
                        "id": 21247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isInitiator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20743,
                        "src": "2721:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 21249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2721:24:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2715:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21251,
                  "nodeType": "ExpressionStatement",
                  "src": "2715:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21253,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21016,
                        "src": "2769:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 21254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2774:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21252,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2402,
                        2427,
                        2461,
                        2490,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 2402,
                      "src": "2760:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 21255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2760:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21256,
                  "nodeType": "ExpressionStatement",
                  "src": "2760:19:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21260,
                        "name": "initiator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21012,
                        "src": "2851:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21257,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "2833:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Accounts_$20994",
                          "typeString": "contract Accounts"
                        }
                      },
                      "id": 21259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeInitiator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20831,
                      "src": "2833:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2833:28:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21262,
                  "nodeType": "ExpressionStatement",
                  "src": "2833:28:6"
                },
                {
                  "expression": {
                    "id": 21268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21263,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21016,
                      "src": "2876:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21266,
                          "name": "initiator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21012,
                          "src": "2896:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 21264,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21004,
                          "src": "2882:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Accounts_$20994",
                            "typeString": "contract Accounts"
                          }
                        },
                        "id": 21265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isInitiator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20743,
                        "src": "2882:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 21267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2882:24:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2876:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21269,
                  "nodeType": "ExpressionStatement",
                  "src": "2876:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21271,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21016,
                        "src": "2930:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 21272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2935:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21270,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2402,
                        2427,
                        2461,
                        2490,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 2402,
                      "src": "2921:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 21273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2921:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21274,
                  "nodeType": "ExpressionStatement",
                  "src": "2921:20:6"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21275,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1811,
                        "src": "2952:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4449",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4320,
                      "src": "2952:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2952:14:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21279,
                  "nodeType": "ExpressionStatement",
                  "src": "2952:14:6"
                }
              ]
            },
            "functionSelector": "608c84b8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddIsRemoveInitiator",
            "nameLocation": "2312:24:6",
            "parameters": {
              "id": 21207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2336:2:6"
            },
            "returnParameters": {
              "id": 21208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2346:0:6"
            },
            "scope": 21357,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21356,
            "nodeType": "FunctionDefinition",
            "src": "3055:659:6",
            "nodes": [],
            "body": {
              "id": 21355,
              "nodeType": "Block",
              "src": "3097:617:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21287,
                        "name": "superAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21006,
                        "src": "3143:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21284,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1811,
                        "src": "3134:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4449",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4298,
                      "src": "3134:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3134:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21289,
                  "nodeType": "ExpressionStatement",
                  "src": "3134:20:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21293,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21008,
                        "src": "3176:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21290,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "3165:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Accounts_$20994",
                          "typeString": "contract Accounts"
                        }
                      },
                      "id": 21292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20964,
                      "src": "3165:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3165:17:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21295,
                  "nodeType": "ExpressionStatement",
                  "src": "3165:17:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21299,
                        "name": "superAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21006,
                        "src": "3250:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21296,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1811,
                        "src": "3236:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4449",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4303,
                      "src": "3236:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3236:25:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21301,
                  "nodeType": "ExpressionStatement",
                  "src": "3236:25:6"
                },
                {
                  "expression": {
                    "id": 21307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21302,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21016,
                      "src": "3309:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21305,
                          "name": "hospital",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21014,
                          "src": "3328:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 21303,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21004,
                          "src": "3315:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Accounts_$20994",
                            "typeString": "contract Accounts"
                          }
                        },
                        "id": 21304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isHospital",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20843,
                        "src": "3315:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 21306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3315:22:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3309:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21308,
                  "nodeType": "ExpressionStatement",
                  "src": "3309:28:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21310,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21016,
                        "src": "3361:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 21311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3366:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21309,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2402,
                        2427,
                        2461,
                        2490,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 2402,
                      "src": "3352:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 21312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3352:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21313,
                  "nodeType": "ExpressionStatement",
                  "src": "3352:20:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21317,
                        "name": "hospital",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21014,
                        "src": "3437:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21314,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "3423:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Accounts_$20994",
                          "typeString": "contract Accounts"
                        }
                      },
                      "id": 21316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addHospital",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20901,
                      "src": "3423:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3423:23:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21319,
                  "nodeType": "ExpressionStatement",
                  "src": "3423:23:6"
                },
                {
                  "expression": {
                    "id": 21325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21320,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21016,
                      "src": "3461:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21323,
                          "name": "hospital",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21014,
                          "src": "3480:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 21321,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21004,
                          "src": "3467:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Accounts_$20994",
                            "typeString": "contract Accounts"
                          }
                        },
                        "id": 21322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isHospital",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20843,
                        "src": "3467:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 21324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3467:22:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3461:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21326,
                  "nodeType": "ExpressionStatement",
                  "src": "3461:28:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21328,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21016,
                        "src": "3513:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 21329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3518:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21327,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2402,
                        2427,
                        2461,
                        2490,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 2402,
                      "src": "3504:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 21330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3504:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21331,
                  "nodeType": "ExpressionStatement",
                  "src": "3504:19:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21335,
                        "name": "hospital",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21014,
                        "src": "3594:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21332,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21004,
                        "src": "3577:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Accounts_$20994",
                          "typeString": "contract Accounts"
                        }
                      },
                      "id": 21334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeHospital",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20932,
                      "src": "3577:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3577:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21337,
                  "nodeType": "ExpressionStatement",
                  "src": "3577:26:6"
                },
                {
                  "expression": {
                    "id": 21343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21338,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21016,
                      "src": "3618:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21341,
                          "name": "hospital",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21014,
                          "src": "3637:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 21339,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21004,
                          "src": "3624:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Accounts_$20994",
                            "typeString": "contract Accounts"
                          }
                        },
                        "id": 21340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isHospital",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20843,
                        "src": "3624:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 21342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3624:22:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3618:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21344,
                  "nodeType": "ExpressionStatement",
                  "src": "3618:28:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21346,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21016,
                        "src": "3670:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 21347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3675:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21345,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2402,
                        2427,
                        2461,
                        2490,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 2402,
                      "src": "3661:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 21348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3661:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21349,
                  "nodeType": "ExpressionStatement",
                  "src": "3661:20:6"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21350,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1811,
                        "src": "3692:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$4449",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4320,
                      "src": "3692:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3692:14:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21354,
                  "nodeType": "ExpressionStatement",
                  "src": "3692:14:6"
                }
              ]
            },
            "functionSelector": "a3efc601",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddIsRemoveHospital",
            "nameLocation": "3064:23:6",
            "parameters": {
              "id": 21282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3087:2:6"
            },
            "returnParameters": {
              "id": 21283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3097:0:6"
            },
            "scope": 21357,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21000,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2875,
              "src": "187:4:6"
            },
            "id": 21001,
            "nodeType": "InheritanceSpecifier",
            "src": "187:4:6"
          }
        ],
        "canonicalName": "AccountsTest",
        "contractDependencies": [
          20994
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21357,
          2875,
          1786
        ],
        "name": "AccountsTest",
        "nameLocation": "171:12:6",
        "scope": 21358,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 6
}